<html> 
<head> 
<title>Exam Preparation</title> 
<script> 
	function examPreparation() 
	{ 
		alert("Exams are near, have you started preparing for them?"); 
		const startedPreparing = confirm("Have you started preparing for your exams?"); 
		if (startedPreparing) 
		{ 
			const studyHours = prompt("Great! How many hours are you studying daily?"); 
			if (studyHours && !isNaN(studyHours)) 
			{ 
				alert(Well done! Studying ${studyHours} hours daily is a good habit. Keep it up!); 
			} 
			else 
			{ 
				alert("Please make sure to plan your study hours. Stay focused!"); 
			} 
		} 
		else 
		{ 
			alert("It's never too late to start preparing. Begin your studies today and good luck!"); 
		} 
	} 
</script> 
</head> 
<body> 
<h1>Exam Preparation Reminder</h1> 
<button onclick="examPreparation()">Start Exam Preparation Check</button> 
</body> 
</html>







import pandas as pd 
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

np.random.seed(42)

data = {

    'User ID':np.arange(1,501),
    'Gender':np.random.choice(['Male','Female'],500),
    'Age':np.random.randint(18,60,500),
    'EstimatedSalary':np.random.randint(15000,150000,500),
    'Purchased':np.random.choice([0,1],500)
    
}

df = pd.DataFrame(data)

df['Gender'] = df['Gender'].map({'Male':0,'Female':1})

X=df[['Gender','Age','EstimatedSalary']]
y = df['Purchased']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,
random_state=42)

model = LogisticRegression()
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test,y_pred)
conf_matrix = confusion_matrix(y_test,y_pred)

print(f"Accuracy:{accuracy}")
print(f"Confusion Matrix:n{conf_matrix}")